.container
    .jumbotron.subhead
        %h1
            = @page_title = "Modules"
            %p.lead Structures
    %section
        .row
            = partial('modules_sidebar')
            .col-sm-9
                .page-header
                    %h1= @page_sub_title = "Structures"
                %p
                    Structures are sets of blocks that can be dynamically copied into the world in response to match events.
                    The original structure is built into the map by the mapmaker, and defined in XML with regions.
                    When the match loads, the original structures are cleared from the world and saved.
                %p
                    Structures are brought to life by something called a
                    %em dynamic.
                    This is an XML construct that causes a structure to appear at a specified location in reaction to a given
                    %a{:href => "/modules/filters"} filter.
                    Whenever the filter is in a passing state (when it has a value of
                    %code ALLOW
                    or
                    %code ABSTAIN
                    ), the structure will appear.
                    When the filter is not passing, (when its value is
                    %code DENY
                    ), the structure will disappear.
                %p
                    Structures are a very powerful feature that can be used to implement an endless variety of custom game mechanics.

                .alert.alert-warning.alert-small
                    .clearfix
                        %i.fa.fa-2x.fa-exclamation-triangle
                        %p.alert-content
                            Currently, only
                            %a{:href => "/modules/filters#objectiveFilter"} objective filters
                            , time filters, and
                            %a{:href => "/modules/filters#flagFilter"} flag filters
                            can be used with dynamic structures, as well as
                            %a{:href => "/modules/filters#filterModifiers"} filter modifiers.
                            %br
                            Other filter types may be supported in the future.

                .table-responsive
                    %table.table.table-striped.table-condensed
                        %thead
                            %tr
                                %th Element
                                %th Description
                        %tbody
                            %tr
                                %td
                                    %span.highlight
                                        %code= html_escape('<structures> </structures>')
                                %td
                                    Element containing all structures and dynamics
                            %tr
                                %th{:colspan => "2"} Sub-elements
                            %tr
                                %td
                                    %span.highlight
                                        %code= html_escape('<structure>')
                                %td Defines a block structure that is part of the map
                            %tr
                                %td
                                    %span.highlight
                                        %code= html_escape('<dynamic>')
                                %td Causes a structure to be placed/removed at some location in reaction to a filter

                %h5#structureAttributes Structure Attributes
                .table-responsive
                    %table.table.table-striped.table-condensed
                        %thead
                            %tr
                                %th Attribute
                                %th Description
                                %th{width: "15%"} Value
                                %td{width: "25%"} Default
                        %tbody
                            %tr#structureId
                                %td
                                    %code id
                                %td Unique identifier used to reference the structure from other places in the XML.
                                %td
                                    %span.label.label-primary String
                                %td
                            %tr
                                %td
                                    %code region
                                %td
                                    %span.label.label-default{:title => "Can be an attribute or sub-element."} Property
                                    %span.label.label-danger Required
                                    A single region containing the structure.
                                %td
                                    %a{:href => "/modules/regions"} Cuboid Region
                                %td
                            %tr
                                %td
                                    %code origin
                                %td
                                    A location used as the reference point when specifying destination points for the structure.
                                %td
                                    %span.label.label-primary X,Y,Z
                                %td
                                    Low corner of
                                    %code region
                                    bounding box.
                            %tr
                                %td
                                    %code air
                                %td
                                    Whether air blocks should be considered part of the structure.
                                    If true, empty blocks in the structure's region will be copied along with it, clearing any blocks at the destination.
                                    If false, air blocks are not copied and the structure is mixed in with blocks at the destination.
                                %td
                                    %span.label.label-primary true/false
                                %td false
                            %tr
                                %td
                                    %code clear
                                %td
                                    Whether to clear the original structure when the match loads.
                                    If true, the structure's region will be filled with air, and players will never see it.
                                    If false, the original structure is not modified.
                                %td
                                    %span.label.label-primary true/false
                                %td true

                %h5#dynamicAttributes Dynamic Attributes
                .table-responsive
                    %table.table.table-striped.table-condensed
                        %thead
                            %tr
                                %th Attribute
                                %th Description
                                %th{width: "15%"} Value
                                %td{width: "25%"} Default
                        %tbody
                            %tr
                                %td
                                    %code id
                                %td Unique identifier used to reference the dynamic from other places in the XML.
                                %td
                                    %span.label.label-primary String
                                %td
                            %tr
                                %td
                                    %code structure
                                %td
                                    %code id
                                    of the structure to place.
                                %td
                                    %a{href: "#structureId"} Structure ID
                                %td
                            %tr
                                %td
                                    %code filter
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Conditions under which the structure is placed.
                                    %br
                                    %em
                                        Only
                                        %code= html_escape('<objective>')
                                        ,
                                        %code= html_escape('<time>')
                                        , and flag-related filters are currently supported.
                                %td
                                    %a{:href => "/modules/filters"} Filter
                                %td
                                    %code= html_escape('<always/>')
                                    %br
                                    (structure is permanently placed)
                            %tr
                                %td
                                    %code trigger
                                %td
                                    %span.label.label-default{:title => "Can be either this attribute or a sub-element."} Property
                                    Dynamic conditions under which the structure is placed.
                                %td
                                    %a{:href => "/modules/filters"} Dynamic Filter
                                %td
                            %tr
                                %td
                                    %code location
                                %td
                                    Location to place the structure at. The structure's
                                    %code origin
                                    will be at this point.
                                    %br
                                    %em
                                        This is an alternative to
                                        %code offset
                                %td
                                    %span.label.label-primary X,Y,Z
                                %td
                            %tr
                                %td
                                    %code offset
                                %td
                                    Relative position to place the structure at.
                                    The structure will be translated by this amount from it's original location.
                                    %br
                                    %em
                                        This is an alternative to
                                        %code location
                                %td
                                    %span.label.label-primary X,Y,Z
                                %td
                                    0,0,0
                                    %br
                                    (structure placed at its original location)

                %h2#examples Examples
                :markdown
                        <structures>
                            <!-- Define a 25x2x7 cuboid structure called blue-bridge -->
                            <!-- The original structure is high in the sky around 0,0 -->
                            <structure id="blue-bridge" air="false">
                                <region>
                                    <cuboid min="0,192,0" size="25,2,7"/>
                                </region>
                            </structure>

                            <!-- Define a cylindrical structure called tower, using a close fitting cuboid -->
                            <!-- The original structure is built in an area outside the map, around 400,400 -->
                            <structure id="tower" origin="400,64,400">
                                <region>
                                    <cuboid min="397,64,397" size="6,12,6"/>
                                </region>
                            </structure>

                            <!-- Make blue-bridge appear whenever Blue Team owns the control-point called "hill" -->
                            <!-- The bridge will appear 128 blocks directly below it's original location -->
                            <dynamic structure="blue-bridge" offset="0,-128,0">
                                <filter>
                                    <objective team="blue-team">hill</objective>
                                </filter>
                            </dynamic>

                            <!-- Start the match with a tower at 36,64,0 -->
                            <!-- After 5 minutes, move the tower to -36,64,0 -->
                            <!-- After 10 minutes, remove the tower -->
                            <dynamic structure="tower" location="36,64,0">
                                <filter>
                                    <not>
                                        <time>5m</time>
                                    </not>
                                </filter>
                            </dynamic>

                            <dynamic structure="tower" location="-36,64,0">
                                <filter>
                                    <all>
                                        <time>5m</time>
                                        <not>
                                            <time>10m</time>
                                        </not>
                                    </all>
                                </filter>
                            </dynamic>
                        </structures>
